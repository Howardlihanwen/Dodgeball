import pygame
import sys
import random

# 初始化 Pygame
pygame.init()

# 設定視窗大小和標題
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("簡單遊戲")

# 設定顏色
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)

# 設定遊戲參數
player_size = 50
player_pos = [screen_width // 2, screen_height - 2 * player_size]
enemy_size = 50
enemy_pos = [random.randint(0, screen_width - enemy_size), 0]
enemy_list = [enemy_pos]
speed = 10
score = 0

# 設定計時器
clock = pygame.time.Clock()

# 定義函數
def drop_enemies(enemy_list):
    delay = random.random()
    if len(enemy_list) < 10 and delay < 0.1:
        x_pos = random.randint(0, screen_width - enemy_size)
        y_pos = 0
        enemy_list.append([x_pos, y_pos])

def draw_enemies(enemy_list):
    for enemy_pos in enemy_list:
        pygame.draw.circle(screen, red, (enemy_pos[0] + enemy_size // 2, enemy_pos[1] + enemy_size // 2), enemy_size // 2)

def update_enemy_pos(enemy_list, score):
    for idx, enemy_pos in enumerate(enemy_list):
        if enemy_pos[1] >= 0 and enemy_pos[1] < screen_height:
            enemy_pos[1] += speed
        else:
            enemy_list.pop(idx)
            score += 1
    return score

def collision_check(enemy_list, player_pos):
    for enemy_pos in enemy_list:
        if detect_collision(player_pos, enemy_pos):
            return True
    return False

def detect_collision(player_pos, enemy_pos):
    p_x = player_pos[0]
    p_y = player_pos[1]
    e_x = enemy_pos[0]
    e_y = enemy_pos[1]

    if (e_x >= p_x and e_x < (p_x + player_size)) or (p_x >= e_x and p_x < (e_x + enemy_size)):
        if (e_y >= p_y and e_y < (p_y + player_size)) or (p_y >= e_y and p_y < (e_y + enemy_size)):
            return True
    return False

# 遊戲迴圈
game_over = False
while not game_over:

    # 監聽事件
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            sys.exit()
        if event.type == pygame.KEYDOWN:
            x = player_pos[0]
            y = player_pos[1]
            if event.key == pygame.K_LEFT:
                x -= player_size
            elif event.key == pygame.K_RIGHT:
                x += player_size
            player_pos = [x, y]

    # 更新遊戲狀態
    screen.fill(white)
    drop_enemies(enemy_list)
    score = update_enemy_pos(enemy_list, score)

    # 碰撞檢測
    if collision_check(enemy_list, player_pos):
        game_over = True
        break

    # 畫出角色和敵人
    pygame.draw.rect(screen, black, (player_pos[0], player_pos[1], player_size, player_size))
    draw_enemies(enemy_list)

    # 顯示分數
    font = pygame.font.SysFont(None, 24)
    text = font.render("分數：" + str(score), True, black)
    screen.blit(text, (10, 10))

    # 更新視窗
    pygame.display.update()

    # 設定幀率
    clock.tick(30)
